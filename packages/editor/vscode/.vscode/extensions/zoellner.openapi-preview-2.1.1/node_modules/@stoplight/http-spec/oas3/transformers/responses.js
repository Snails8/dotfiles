"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.translateToResponses = void 0;
const pickBy = require("lodash.pickby");
const context_1 = require("../../context");
const guards_1 = require("../../guards");
const resolver_1 = require("../../oas/resolver");
const utils_1 = require("../../utils");
const guards_2 = require("../guards");
const content_1 = require("./content");
const translateToResponse = (0, context_1.withContext)(function ([statusCode, response]) {
    const resolvedResponse = this.maybeResolveLocalRef(response);
    if (!(0, guards_2.isResponseObject)(resolvedResponse))
        return;
    const actualKey = this.context === 'service' ? (0, resolver_1.getSharedKey)(resolvedResponse) : statusCode;
    return {
        id: this.generateId(`http_response-${this.parentId}-${actualKey}`),
        code: statusCode,
        headers: (0, utils_1.entries)(resolvedResponse.headers).map(content_1.translateHeaderObject, this).filter(guards_1.isNonNullable),
        contents: (0, utils_1.entries)(resolvedResponse.content).map(content_1.translateMediaTypeObject, this).filter(guards_1.isNonNullable),
        ...pickBy({
            description: resolvedResponse.description,
        }, guards_1.isString),
    };
});
const translateToResponses = function (responses) {
    return (0, utils_1.entries)(responses).map(translateToResponse, this).filter(guards_1.isNonNullable);
};
exports.translateToResponses = translateToResponses;
//# sourceMappingURL=responses.js.map